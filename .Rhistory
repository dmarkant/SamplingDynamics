m = lmerTest::lmer(samplesize ~ group + domain + session + (1|partid), data=data)
summary(m)
data$groupyng
data$group
summary(m)
summary(m1)
head(data)
m1 = lmerTest::lmer(samplesize ~
group +
domain +
session +
switchfreq +
(1|partid) +
(1|gamble_lab), data=data)
summary(m1)
m1 = lmerTest::lmer(samplesize ~
group +
domain +
session +
switchgrp +
(1|partid) +
(1|gamble_lab), data=data)
head(data)
m1 = lmerTest::lmer(samplesize ~
group +
domain +
session +
switch_grp +
(1|partid) +
(1|gamble_lab), data=data)
summary(m1)
m1 = lmerTest::lmer(samplesize ~
group +
domain +
session +
switch_grp +
(1|partid), data=data)
summary(m1)
m2 = lmerTest::lmer(samplesize ~
group +
domain +
session +
switch_grp +
(1|partid) +
(1|gamble_lab), data=data)
summary(m2)
anova(m1, m2)
head(data)
data = as.data.frame(read.csv("dfe_by_game.csv"))
head(data)
summary(data)
data$group = factor(data$group)
data$domain = factor(data$domain)
data$switch_grp = factor(data$switch_grp)
data$switchfreq = as.numeric(as.character(data$switchfreq))
data$gamble_lab = factor(data$gamble_lab)
data$partid = factor(data$partid)
summary(data)
m1 = lmerTest::lmer(samplesize ~
group +
session +
domain +
pairtype +
ev_diff +
switch_grp +
(1|partid), data=data)
summary(m1)
data$group = factor(data$group)
m1 = lmerTest::lmer(samplesize ~
group +
session +
domain +
pairtype +
ev_diff +
switch_grp +
(1|partid), data=data)
summary(m1)
head(data)
summary(data)
data$L_id = factor(data$L_id)
data$H_id = factor(data$H_id)
summary(data)
data$L_id = factor(as.character(data$L_id))
data = as.data.frame(read.csv("dfe_by_game.csv"))
data$L_id
factor(data$L_id)
summary(data)
data$L_id = factor(as.character(data$L_id))
summary(data)
data$L_id = factor(data$L_id)
data$H_id = factor(data$H_id)
data = as.data.frame(read.csv("dfe_by_game.csv"))
data$group = factor(data$group)
data$domain = factor(data$domain)
data$switch_grp = factor(data$switch_grp)
data$switchfreq = as.numeric(as.character(data$switchfreq))
data$gamble_lab = factor(data$gamble_lab)
data$partid = factor(data$partid)
data$L_id = factor(data$L_id)
data$H_id = factor(data$H_id)
m1 = lmerTest::lmer(samplesize ~
group +
session +
domain +
L_id +
H_id +
pairtype +
ev_diff +
switch_grp +
(1|partid), data=data)
summary(m1)
m = lmerTest::lmer(switchcount ~
samplesize +
group +
session +
domain +
pairtype +
ev_diff +
(1|partid), data=data)
summary(m)
m = lmerTest::lmer(switchcount ~
group +
session +
domain +
pairtype +
ev_diff +
(samplesize|partid), data=data)
summary(m)
ranef(m)
ranef(m)$partid
ranef(m)$partid['samplesize',]
ranef(m)$partid['samplesize']
plot(ranef(m)$partid['samplesize'])
summary(m)
m = lmerTest::lmer(switchfreq ~
group +
session +
domain +
pairtype +
ev_diff +
(1|partid), data=data)
summary(m)
hist(data$switchfreq)
m = lmerTest::lmer(switchcount ~
group +
session +
domain +
pairtype +
ev_diff +
(samplesize|partid), data=data)
summary(m)
m = lmerTest::lmer(switchcount ~
group +
session +
domain +
pairtype +
ev_diff +
group:ev_diff +
(samplesize|partid), data=data)
m1 = lmerTest::lmer(samplesize ~
group +
session +
domain +
pairtype +
ev_diff +
group:ev_diff +
switch_grp +
(1|partid), data=data)
summary(m1)
m1 = lmerTest::lmer(samplesize ~
group +
session +
domain +
pairtype +
ev_diff +
switch_grp +
switch_grp:domain +
switch_grp:pairtype +
switch_grp:ev_diff +
(1|partid), data=data)
summary(m1)
m1 = lmerTest::lmer(samplesize ~
group +
session +
domain +
pairtype +
ev_diff +
switch_grp +
(1|partid), data=data)
m = lmerTest::lmer(switchcount ~
group +
session +
domain +
pairtype +
ev_diff +
(samplesize|partid), data=data)
rcorr.cens
data = as.data.frame(read.csv('reg_data.csv'))
data$domain = factor(data$domain)
data$gamble_lab = factor(data$gamble_lab)
data$switched = factor(data$switched)
data$group = factor(data$group)
data$sample_mean = as.numeric(as.character(data$sample_mean))
data$deviation = as.numeric(as.character(data$deviation))
data$sample_var = as.numeric(as.character(data$sample_var))
data$switch_or_stop = data$switched==1 | data$stopped==1
data$abs_dev = abs(data$deviation)
data$dec = as.numeric(data$switched)-1 + 2*(as.numeric(data$stopped))
data$mn_diff = as.numeric(as.character(data$mn_diff))
data$lpv = log(as.numeric(as.character(data$lpv)))
freq_data = data[data$switch_grp == 'freq',]
rare_data = data[data$switch_grp == 'rare',]
rcorr.cens(rare_data$abs_dev, data$switch_or_stop)
rcorr.cens(rare_data$abs_dev, rare_data$switch_or_stop)
setwd("~/code/SamplingDynamics/")
library(lme4)
library(lmerTest)
data = as.data.frame(read.csv("dfe_by_game.csv"))
data$group = factor(data$group)
data$domain = factor(data$domain)
data$switch_grp = factor(data$switch_grp)
data$switchfreq = as.numeric(as.character(data$switchfreq))
data$gamble_lab = factor(data$gamble_lab)
data$partid = factor(data$partid)
data$L_id = factor(data$L_id)
data$H_id = factor(data$H_id)
setwd("~/code/SamplingDynamics/")
data = as.data.frame(read.csv("dfe_by_game.csv"))
data$group = factor(data$group)
data$domain = factor(data$domain)
data$switch_grp = factor(data$switch_grp)
data$switchfreq = as.numeric(as.character(data$switchfreq))
data$gamble_lab = factor(data$gamble_lab)
data$partid = factor(data$partid)
data$L_id = factor(data$L_id)
data$H_id = factor(data$H_id)
data
head(data)
data = as.data.frame(read.csv("dfe_by_game.csv"))
data$group = factor(data$group)
data$domain = factor(data$domain)
data$switch_grp = factor(data$switch_grp)
data = as.data.frame(read.csv("dfe_by_game.csv"))
head(data)
data$group = factor(data$group)
data$domain = factor(data$domain)
data$switch_grp = factor(data$switch_grp)
data$switchfreq = as.numeric(as.character(data$switchfreq))
data$gamble_lab = factor(data$gamble_lab)
data$partid = factor(data$partid)
data$L_id = factor(data$L_id)
data$H_id = factor(data$H_id)
m1 = lmerTest::lmer(samplesize ~
group +
session +
domain +
pairtype +
ev_diff +
switch_grp +
(1|partid), data=data)
library(lmerTest)
install.packages("lmerTest")
R.version()
version()
setwd("~/code/SamplingDynamics/")
library(lme4)
library(lmerTest)
data = as.data.frame(read.csv("dfe_by_game.csv"))
data$group = factor(data$group)
data$domain = factor(data$domain)
data$switch_grp = factor(data$switch_grp)
data$switchfreq = as.numeric(as.character(data$switchfreq))
data$gamble_lab = factor(data$gamble_lab)
data$partid = factor(data$partid)
data$L_id = factor(data$L_id)
data$H_id = factor(data$H_id)
help(cor)
data = as.data.frame(read.csv('reg_data.csv'))
data$domain = factor(data$domain)
data$gamble_lab = factor(data$gamble_lab)
data$switched = factor(data$switched)
data$group = factor(data$group)
data$sample_mean = as.numeric(as.character(data$sample_mean))
data$deviation = as.numeric(as.character(data$deviation))
data$sample_var = as.numeric(as.character(data$sample_var))
data$switch_or_stop = data$switched==1 | data$stopped==1
data$abs_dev = abs(data$deviation)
data$dec = as.numeric(data$switched)-1 + 2*(as.numeric(data$stopped))
data$mn_diff = as.numeric(as.character(data$mn_diff))
data$lpv = log(as.numeric(as.character(data$lpv)))
head(data)
cor(data$switch_or_stop, data$mn_diff)
cor(data$switch_or_stop, data$mn_diff, method="kendall")
setwd("~/code/SamplingDynamics/")
library(lme4)
library(languageR)
library(lmerTest)
install.packages(lmerTest)
install.packages("lmerTest")
setwd("~/code/SamplingDynamics/")
library(lme4)
library(lmerTest)
data = as.data.frame(read.csv("dfe_by_game.csv"))
data$group = factor(data$group)
data$domain = factor(data$domain)
data$switch_grp = factor(data$switch_grp)
data$switchfreq = as.numeric(as.character(data$switchfreq))
data$gamble_lab = factor(data$gamble_lab)
data$partid = factor(data$partid)
data$L_id = factor(data$L_id)
data$H_id = factor(data$H_id)
head(data)
m1 = lmerTest::lmer(samplesize ~
group +
session +
domain +
pairtype +
ev_diff +
switch_grp +
(1|partid), data=data)
summary(m1)
data$pair_type
head(data)
freq_data = data[data$switch_grp == 'freq',]
rare_data = data[data$switch_grp == 'rare',]
freq_data$partid
unique(freq_data$partid)
unique(rare_data$partid)
size(unique(rare_data$partid))
length(unique(rare_data$partid))
length(unique(freq_data$partid))
rare_data$switchfreq
hist(rare_data$switchfreq)
hist(freq_data$switchfreq)
library(lme4)
library(lmerTest)
data = as.data.frame(read.csv("dfe_by_game.csv"))
data$group = factor(data$group)
data$domain = factor(data$domain)
data$switch_grp = factor(data$switch_grp)
data$switchfreq = as.numeric(as.character(data$switchfreq))
data$gamble_lab = factor(data$gamble_lab)
data$partid = factor(data$partid)
data$L_id = factor(data$L_id)
data$H_id = factor(data$H_id)
data = as.data.frame(read.csv("dfe_by_game.csv"))
head(data)
data$group = factor(data$group)
data$domain = factor(data$domain)
data$switch_grp = factor(data$switch_grp)
data$switchfreq = as.numeric(as.character(data$switchfreq))
data$gamble_lab = factor(data$gamble_lab)
data$partid = factor(data$partid)
data$L_id = factor(data$L_id)
data = as.data.frame(read.csv("dfe_by_game.csv"))
data$group = factor(data$group)
data$domain = factor(data$domain)
data$switch_grp = factor(data$switch_grp)
data$switchfreq = as.numeric(as.character(data$switchfreq))
data$gamble_lab = factor(data$gamble_lab)
data$partid = factor(data$partid)
data$L_id = factor(data$L_id)
data$H_id = factor(data$H_id)
m1 = lmerTest::lmer(samplesize ~
group +
session +
domain +
pairtype +
ev_diff +
switch_grp +
(1|partid), data=data)
summary(m1)
head(data)
freq_data = data[data$switch_grp == 'freq',]
rare_data = data[data$switch_grp == 'rare',]
freq_data$partid
unique(freq_data$partid)
data = as.data.frame(read.csv("dfe_by_game.csv"))
data$group = factor(data$group)
data$domain = factor(data$domain)
data$switch_grp = factor(data$switch_grp)
data$switchfreq = as.numeric(as.character(data$switchfreq))
data$gamble_lab = factor(data$gamble_lab)
data$partid = factor(data$partid)
data$L_id = factor(data$L_id)
data$H_id = factor(data$H_id)
m1 = lmerTest::lmer(samplesize ~
group +
session +
domain +
pairtype +
ev_diff +
switch_grp +
(1|partid), data=data)
summary(m1)
m = lmerTest::lmer(switchcount ~
group +
session +
domain +
pairtype +
ev_diff +
(samplesize|partid), data=data)
summary(m)
freq_data = data[data$switch_grp == 'freq',]
rare_data = data[data$switch_grp == 'rare',]
m = lmerTest::lmer(switchcount ~
group +
session +
domain +
pairtype +
ev_diff +
(samplesize|partid), data=freq_data)
summary(m)
m = lmerTest::lmer(switchcount ~
group +
session +
domain +
pairtype +
ev_diff +
(samplesize|partid), data=rare_data)
m = lmerTest::lmer(switchcount ~
group +
session +
domain +
pairtype +
ev_diff +
(samplesize|partid), data=data)
summary(m)
m = lmerTest::lmer(samplesize ~
group +
session +
domain +
pairtype +
ev_diff +
switch_grp +
(1|partid), data=data)
summary(m)
data$session
data$session = as.numeric(as.character(data$session))
# Sample size
m = lmerTest::lmer(samplesize ~
group +
session +
domain +
pairtype +
ev_diff +
switch_grp +
(1|partid), data=data)
summary(m)
m = lmerTest::lmer(samplesize ~
group*domain +
session +
pairtype +
ev_diff +
switch_grp +
(1|partid), data=data)
summary(m)
m = lmerTest::lmer(samplesize ~
group*pairtype +
domain +
session +
pairtype +
ev_diff +
switch_grp +
(1|partid), data=data)
summary(m)
m = lmerTest::lmer(samplesize ~
group*pairtype +
domain +
session +
pairtype +
ev_diff +
switch_grp +
(1|partid), data=rare_data)
summary(m)
m = lmerTest::lmer(samplesize ~
group*pairtype +
domain +
session +
pairtype +
ev_diff +
(1|partid), data=rare_data)
summary(m)
m = lmerTest::lmer(samplesize ~
group*pairtype*domain +
session +
pairtype +
ev_diff +
(1|partid), data=rare_data)
summary(m)
m = lmerTest::lmer(samplesize ~
group*pairtype*domain +
session +
pairtype +
ev_diff +
(1|partid), data=freq_data)
summary(m)
m = lmerTest::lmer(samplesize ~
group*pairtype*domain +
session +
pairtype +
ev_diff +
(1|partid), data=rare_data)
summary(m)
head(data)
m = lmerTest::lmer(samplesize ~
group*pairtype*domain +
session +
pairtype +
ev_diff +
(1|partid) + (1|gamble_lab), data=rare_data)
summary(m)
